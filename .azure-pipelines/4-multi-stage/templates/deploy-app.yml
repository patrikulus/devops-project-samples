trigger: none
pr: none

parameters:
  environment: ''
  appServicePlanName: '$(AppServicePlanName)'
  webAppName: '$(WebAppName)'
  azureConnectionName: '$(AzureConnectionName)'
  subscriptionId: '$(SubscriptionId)'
  resourceGroupName: '$(ResourceGroupName)'
  location: 'North Europe'
  sku: 'F1'

variables:
- group: ms-common
- group: ms-${{ parameters.environment }}

jobs:
- deployment: deploy
  displayName: 'Deploy app on ${{ parameters.environment }}'
  environment: ${{ parameters.environment }}
  strategy:
    runOnce:
      preDeploy:
        steps:
        - download: current
        - task: AzureResourceManagerTemplateDeployment@3
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '${{ parameters.azureConnectionName }}'
            subscriptionId: '${{ parameters.subscriptionId }}'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '${{ parameters.resourceGroupName }}'
            location: '${{ parameters.location }}'
            csmFile: '$(Pipeline.Workspace)/**/arm/*.json'
            overrideParameters: '-webAppName ${{ parameters.webAppName }} -hostingPlanName ${{ parameters.appServicePlanName }} -appInsightsLocation "NorthEurope" -sku ${{ parameters.sku }}'
      deploy:
        steps:
        - download: current
        - task: AzureRmWebAppDeployment@4
          displayName: 'Deploy Azure App Service'
          inputs:
            ConnectionType: 'AzureRM'
            azureSubscription: '${{ parameters.azureConnectionName }}'
            appType: 'webAppLinux'
            WebAppName: '${{ parameters.webAppName }}'
            packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'
      on:
        failure:
          steps:
          - script: 'curl https://maker.ifttt.com/trigger/deployment_failed/with/key/$(MakerKey)'
        success:
          steps:
          - script: 'curl https://maker.ifttt.com/trigger/deployment_success/with/key/$(MakerKey)'