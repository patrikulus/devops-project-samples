trigger: none
pr: none

parameters:
- name: environment
  displayName: App Environment
  type: string
  values:
    - test
    - prod
  
resources:
  pipelines:
  - pipeline: BuildApp
    source: 'Build app with tasks'
  
variables:
- group: ms-common
- group: ms-${{ parameters.environment }}

jobs:
- deployment: deploy
  displayName: 'Deploy app on ${{ parameters.environment }}'
  environment: ${{ parameters.environment }}
  strategy:
    runOnce:
      preDeploy:
        steps:
        - download: BuildApp
        - task: AzureResourceManagerTemplateDeployment@3
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AzureConnectionName)'
            subscriptionId: '$(SubscriptionId)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(ResourceGroupName)'
            location: '$(Location)'
            csmFile: '$(Pipeline.Workspace)/**/arm/*.json'
            overrideParameters: '-webAppName $(WebAppName) -hostingPlanName $(AppServicePlanName) -appInsightsLocation $(Location) -sku $(Sku)'
      deploy:
        steps:
        - download: BuildApp
        - task: AzureRmWebAppDeployment@4
          displayName: 'Deploy Azure App Service'
          inputs:
            ConnectionType: 'AzureRM'
            azureSubscription: '$(AzureConnectionName)'
            appType: 'webAppLinux'
            WebAppName: '$(WebAppName)'
            packageForLinux: '$(Pipeline.Workspace)/**/*.zip'
      on:
        failure:
          steps:
          - script: 'curl https://maker.ifttt.com/trigger/deployment_failed/with/key/$(MakerKey)'
        success:
          steps:
          - script: 'curl https://maker.ifttt.com/trigger/deployment_success/with/key/$(MakerKey)'